struct Point {
    x, y: int

    fn display(self) {
        print "Point"
        print self.x
        print self.y
        print ""
    }
}

struct Poly {
    pt: Point,

    fn clone(self) -> Self {
        // self
        Poly{pt=Point{x=1, y=2}}
    }
}

struct Structure {
    poly: Poly,
    polys: []Poly,
}

fn main() {
    // Var creation
    var pt = Point{x=2, y=6}
    var pts = [pt]
    var poly = Poly{pt}
    var structure = Structure{poly, polys=[poly]}

    // Simple identifier mutation
    pt.x = 9
    print pts[0].x
    pt.display()
    pt = Point{x=5, y=11}

    // Array access mutation
    pts[0].x = 8
    pts[0] = Point{x=3, y=7}
    pts[0].display()

    // Field access
    poly.pt = Point{x=5, y=8}
    structure.poly.pt = Point{x=7, y=9}
    poly.pt.display()
    structure.polys[0].pt.display()

    // In rhs
    var tmp = poly.clone()
    var tmp2 = structure.poly.clone()
}
