struct Point {
    x, y: int,
    past: [][]int,
}

struct Poly {
    vertex: [][]Point
}

struct Object {
    poly: Poly,
    name: str = "object",
}

fn main() {
    var i = 1

    var p1 = Point{ x = 1, y = 2, past = [[1, 2], [3, 4]]}
    var p2 = Point{ x = 5, y = 6, past = [[7, 8], [9, 10]]}
    var p3 = Point{ x = 11, y = 12, past = [[13, 14], [15, 16]]}
    var p4 = Point{ x = 17, y = 18, past = [[19, 20], [21, 22]]}

    var poly = Poly{ vertex = [[p1, p2], [p3, p4]] }
    var obj = Object{ poly } 

    print obj.poly.vertex[1][0]
    print obj.poly.vertex[1][0].x
    print obj.poly.vertex[i][0].past[0]
    print obj.poly.vertex[1][0].past[i][1]

    // Don't change
    p3.past = [[11, 22], [33, 44]]
    print obj.poly.vertex[1][0].past[0]
    
    obj.poly.vertex[1][0].past[0] = [55, 66]
    print obj.poly.vertex[1][0].past
}



// ---------- Runtime switch on functions

// struct Person {
//     // Method
//     fn speak(self, a: int) { }
//     // Static
//     fn otherSpeak(a: int) {}
//
//     fn getSpeak(self) -> fn(int) -> void {
//         if (true) {
//             return self.speak
//         } else return Person.otherSpeak
//     }
// }


// ---------- Closure

// fn main() {
//     var a = 3
//     var closure = || { print a }
//     closure()
//     // print a
//
//     // print oui(1, 5.)
//
//     // var foo = Foo{x=a}
//     // foo.display()
// }


// ---------- Cow

//struct Point {
//    x, y: int
//
//    fn display(self) {
//        print "Point"
//        print self.x
//        print self.y
//        print ""
//    }
//}
//
//struct Poly {
//    pt: Point,
//
//    fn clone(self) -> Self {
//        self.pt.x = 123
//        print self.pt.x
//
//        // self
//        Poly{pt=Point{x=1, y=2}}
//    }
//}
//
//struct Structure {
//    poly: Poly,
//    polys: []Poly,
//}
//
//struct Container {
//    arr: []Point,
//}
//
//fn main() {
//    // Var creation
//    var pt = Point{x=2, y=6}
//    var pts = [pt]
//    var poly = Poly{pt}
//    var structure = Structure{poly, polys=[poly]}
//    var container = Container{arr=pts}
//
//    // Simple identifier mutation
//    //pt.x = 9
//    //print pts[0].x
//    //print poly.pt.x
//    //pt.display()
//
//    // Array access mutation
//    //pts[0].x = 8
//    //print pts[0].x
//    //print poly.pt.x
//    //print container.arr[0].x
//    //pt.display()
//    //
//    //pts[0] = Point{x=3, y=7}
//    //container.arr[0].display()
//
//
//    // Field chain access
//    //var polyRef = structure.poly
//    //var ptRef = structure.poly.pt
//    //
//    //structure.poly.pt.y = 99
//    //print polyRef.pt.y
//    //print ptRef.y
//
//    // Field access
//    //poly.pt = Point{x=5, y=8}
//    //print structure.poly.pt.y
//    //
//    //structure.polys[0].pt.x = 5
//    //poly.pt.display()
//    //structure.polys[0].pt.display()
//
//    // In rhs
//    var tmp = poly.clone()
//    //print poly.pt.x
//    //print structure.poly.pt.x
//
//    //var tmp2 = structure.poly.clone()
//}
