// fn add(arg1: str) {}
// fn sub(arg1: float, args2: bool) {}

struct Foo {
    fn staticFn(a: int) {}
    fn method(self, a=1) {}
}

fn main() {
    // add(1)
    // add(1, 2)
    // sub(4.5)
    // var a = add("hoy")

    var foo = Foo{}
    var bound = foo.method
    bound()

    // foo.staticFn(5)
    // Foo.method()
}



// ----------- Imports

//use .data.geom
//
//struct Foo {
//    a, b: int
//
//    fn add(self, nb: int) {
//        self.a += nb
//        print self.a
//    }
//}
//
//fn main() {
//    var foo = Foo{a=12, b=34}
//    foo.add(10)
//    geom.introduce()
//    var pt = geom.Point{ x=1, y=8 }
//    pt.display()
//
//    pt = geom.createPoint(3, 14)
//    pt.display()
//
//    foo = Foo{a=120, b=340}
//    foo.add(-50)
//
//    var makePt = geom.createPoint
//    pt = makePt(56, 78)
//    pt.display()
//}
//



// ---------- Runtime switch on functions

// struct Person {
//     // Method
//     fn speak(self, a: int) { }
//     // Static
//     fn otherSpeak(a: int) {}
//
//     fn getSpeak(self) -> fn(int) -> void {
//         if (true) {
//             return self.speak
//         } else return Person.otherSpeak
//     }
// }


// ---------- Closure

// fn main() {
//     var a = 3
//     var closure = || { print a }
//     closure()
// }


// ---------- Cow

//struct Point {
//    x, y: int
//
//    fn display(self) {
//        print "Point"
//        print self.x
//        print self.y
//        print ""
//    }
//}
//
//struct Poly {
//    pt: Point,
//
//    fn clone(self) -> Self {
//        self.pt.x = 123
//        print self.pt.x
//
//        // self
//        Poly{pt=Point{x=1, y=2}}
//    }
//}
//
//struct Structure {
//    poly: Poly,
//    polys: []Poly,
//}
//
//struct Container {
//    arr: []Point,
//}
//
//fn main() {
//    // Var creation
//    var pt = Point{x=2, y=6}
//    var pts = [pt]
//    var poly = Poly{pt}
//    var structure = Structure{poly, polys=[poly]}
//    var container = Container{arr=pts}
//
//    // Simple identifier mutation
//    //pt.x = 9
//    //print pts[0].x
//    //print poly.pt.x
//    //pt.display()
//
//    // Array access mutation
//    //pts[0].x = 8
//    //print pts[0].x
//    //print poly.pt.x
//    //print container.arr[0].x
//    //pt.display()
//    //
//    //pts[0] = Point{x=3, y=7}
//    //container.arr[0].display()
//
//
//    // Field chain access
//    //var polyRef = structure.poly
//    //var ptRef = structure.poly.pt
//    //
//    //structure.poly.pt.y = 99
//    //print polyRef.pt.y
//    //print ptRef.y
//
//    // Field access
//    //poly.pt = Point{x=5, y=8}
//    //print structure.poly.pt.y
//    //
//    //structure.polys[0].pt.x = 5
//    //poly.pt.display()
//    //structure.polys[0].pt.display()
//
//    // In rhs
//    var tmp = poly.clone()
//    //print poly.pt.x
//    //print structure.poly.pt.x
//
//    //var tmp2 = structure.poly.clone()
//}
