struct Foo {
    a: int
}

fn main() {
    var arr = [Foo{a=6}]
    arr[0].a = 9
    print arr[0].a

    var ref = arr[0]
}

// fn main() {
//     // Near scope capture
//     var a: int = 3
//     var b: int = 3
//
//     fn block() {
//         print a
//         print b
//     }
//     var j: int
// }

// fn main() {
//     // Near scope capture
//     var a: int = 3
//
//     fn capture() { print a }
//
//     // Far scope capture
//     var first = 1
//     var c: int = 3
//     var b = true
//     var last = 9
//
//     fn nested() {
//         var mach: int
//         var mach2 = c
//
//         fn nested2() {
//             var mach3: int
//
//             fn capture1() { print b }
//         }
//     }
//
//     // Assignment
//     var d = 1
//
//     fn capture2() { print d }
//
//     d = 2
// }
//
