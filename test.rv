// struct Bar {
//     arg = "hello"
//
//     fn hello(self) -> str {
//         self.arg
//     }
// }
//
// struct Foo {
//     bound: fn(Bar) -> str,
// }
//
// fn hello2(bar: Bar) -> str {
//     bar.arg
// }
//
// fn main() {
//     var bar = Bar{}
//     var foo = Foo{bound=hello2}
//     print foo.bound(bar)
//
//     foo.bound = hello2
//     print foo.bound(bar)
//
//     foo.bound = bar.hello
//     foo.bound()
// }

fn mul(val1: int, val2: int) -> int {
    val1 * val2
}

fn div(val1: int, val2: int) -> int {
    val1 * val2
}

fn main() {
    var arr: []fn(int, int) -> int = [
        mul,
        div,
    ]
}
