struct Bar {
    arg = "hello"

    fn hello(self) -> str {
        self.arg
    }
}

struct Foo {
    bound: fn(Bar) -> str,
}

fn hello2(bar: Bar) -> str {
    bar.arg
}

fn main() {
    var bar = Bar{}
    var foo = Foo{bound=hello2}
    print foo.bound(bar)


    // --- Error 1 ---
    // No error here cause we assigned a free function
    foo.bound = hello2
    print foo.bound(bar)

    foo.bound = bar.hello
    // Error: missing argument. Did not understand we went from free-function to bound
    foo.bound()
}

