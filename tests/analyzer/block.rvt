// Test blocks

// Void assignment

code:
fn main() {
    var noval = {
        var integer = 1
    }

    var void_post_assign
    void_post_assign = {
        _ = 3 + 4
        var empty
    }
}

error:
VoidAssignment
VoidAssignment

================

code:
fn main() {
    {5}
    print "unused"
}

error:
UnusedValue

================

code:
fn main() {
    var a: int = {
        var nb = 7.5
        nb
    }
}

error:
InvalidAssignType, int, float

================

code:
fn main() {
    var a: int = {
        var nb = 7
        var c = 56
        c = nb - 5
        nb
    }
}

expect:
[Fn declaration main, index: 0, scope: Global, return kind: ImplicitVoid]
    [Variable declaration index: 1, scope: Local]
        [Block pop count: 2, is_expr: true]
            [Variable declaration index: 1, scope: Local]
                [Int 7]
            [Variable declaration index: 2, scope: Local]
                [Int 56]
            [Assignment index: 2, scope: Local]
                [Binop type: SubInt, cast: None]
                    [Variable index: 1, scope: Local]
                    [Int 5]
            [Variable index: 1, scope: Local]

================
