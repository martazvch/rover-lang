// Test blocks

// Void assignment

code:
fn main() {
    var noval = {
        var integer = 1
    }

    var void_post_assign
    void_post_assign = {
        _ = 3 + 4
        var empty
    }
}

error:
VoidAssignment
VoidAssignment

================

code:
fn main() {
    {5}
    print "unused"
}

error:
UnusedValue

================

code:
fn main() {
    var a: int = {
        var nb = 7.5
        nb
    }
}

error:
InvalidAssignType, int, float

================

code:
// Declare local 0, declare local 1, use local 0 in binop
// assign to local 1, returns local 0, defines global 0
fn main() {
    var a: int = {
        var nb = 7
        var c = 56
        c = nb - 5
        nb
    }
}

expect:
[Fn declaration, scope Global, index 0, return ImplicitVoid]
[Block pop count 2]
[Variable scope Local, index 1]
[Variable scope Local, index 2]

[Binop cast None, type int]
[Variable scope Local, index 1]

// Assign to "c"
[Variable scope Local, index 2]
// Return "nb"
[Variable scope Local, index 1]

// Assign to "a"
[Variable scope Local, index 1]

================
