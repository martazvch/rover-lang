// Tests variable declaration type

// Errors

code:
var a: int = 7.5
var b: float = "foo"
var c: bool = 8
var e: str = 2/4
fn main() {}

error:
InvalidAssignType, int, float
InvalidAssignType, float, str
InvalidAssignType, bool, int
InvalidAssignType, str, int

================

code:
var a: floa = 7.5
var b: Int = 4
var c: House
fn main() {}

error:
UndeclaredType, floa
UndeclaredType, Int
UndeclaredType, House

================

code:
var declared: int
var declared: float
fn main() {}

error:
AlreadyDeclared, declared

================

// Extra

code:
var a = 0
var b = true
var c = 56.7
fn main() {}

expect:
[Variable declaration index: 0, scope: Global]
    [Int 0]
[Variable declaration index: 1, scope: Global]
    [Bool true]
[Variable declaration index: 2, scope: Global]
    [Float 56.7]
[Fn declaration main, index: 3, scope: Global, return kind: ImplicitVoid]

================

// Expression assignment

code:
var a = 12 / 34
fn main() {}

expect:
[Variable declaration index: 0, scope: Global]
    [Binop type: DivInt, cast: None]
        [Int 12]
        [Int 34]
[Fn declaration main, index: 1, scope: Global, return kind: ImplicitVoid]

================

// Typed expression assignment

code:
var a: float = 12 / 34
var b: float = 4. / 3
fn main() {}

expect:
[Variable declaration index: 0, scope: Global]
    [Binop type: DivInt, cast: None]
        [Int 12]
        [Int 34]
    [Cast to Float]
[Variable declaration index: 1, scope: Global]
    [Binop type: DivFloat, cast: Rhs]
        [Float 4]
        [Int 3]
[Fn declaration main, index: 2, scope: Global, return kind: ImplicitVoid]

================

