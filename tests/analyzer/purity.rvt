// Purity

code:
var a = 2 + 5 - 7.6
var abc: str = "abc"
var grp = (56 + 22)
var unar = not not true

fn main() {}

expect:
[Variable declaration index: 0, scope: Global]
    [Binop type: SubFloat, cast: Lhs]
        [Binop type: AddInt, cast: None]
            [Int 2]
            [Int 5]
        [Float 7.6]
[Variable declaration index: 1, scope: Global]
    [String abc]
[Variable declaration index: 2, scope: Global]
    [Binop type: AddInt, cast: None]
        [Int 56]
        [Int 22]
[Variable declaration index: 3, scope: Global]
    [Unary Bang]
        [Unary Bang]
            [Bool true]
[Fn declaration main, index: 4, scope: Global, return kind: ImplicitVoid]

================

code:
var a = 2.3 + 5.5 - 7.6
var b = a

fn main() {}

error:
UnpureInGlobal

================
