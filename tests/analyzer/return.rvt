// Tests return statements

code:
fn add() { return }
fn sub() -> int { return 5 }
fn mul(a: int) -> float { return a * sub() }
fn main() {}

expect:
[Fn declaration add, index: 0, scope: Global, return kind: Explicit]
    [Return expr: false, cast: false]
[Fn declaration sub, index: 1, scope: Global, return kind: Explicit]
    [Return expr: true, cast: false]
        [Int 5]
[Fn declaration mul, index: 2, scope: Global, return kind: Explicit]
    [Return expr: true, cast: true]
        [Binop type: MulInt, cast: None]
            [Variable index: 1, scope: Local]
            [Fn call arity: 0, builtin: false]
                [Variable index: 1, scope: Global]
        [Cast to Float]
[Fn declaration main, index: 3, scope: Global, return kind: ImplicitVoid]

================

code:
return 4

fn main() {}

error:
ReturnOutsideFn

================

