// Binary operations with scalar types

// Ints

fn add(a: int, b: int) -> int { return a + b }

fn main() {
    print 1 + 1            // expect: 2
    print 5 * (4 - 6 / 3)  // expect: 10
    print -----7           // expect: -7

    // Floats
    print .5 * 14.8 // expect: 7.4
    print -6. + 2.000 - 1.// expect: -5
    print 0.2 / -.2 // expect: -1

    // Ints
    print 1 + 6 // expect: 7
    print 7 * -5 // expect: -35
    print 1 + 6 / 2 * 5 // expect: 16

    // Strings
    print "Tom is " + "poor" // expect: "Tom is poor"
    print "ooo" * 3 + "k" // expect: "oooooooook"

    // Blocks
    print {
        var tmp1 = 1 + 3
        var tmp2 = 50
        break tmp1 / 2
    } + 10 - {break 2} // expect: 10

    // If else
    print 1 + if true do 3 else -2 // expect: 4
    print 5 - if { break true and false } { break 3 } else 10 // expect: -5

    // Functions call
    print -20 / add(5, 5) // expect: -2

    // local call
    fn sub(a: int, b: int) -> int { return a - b }
    print 66 + sub(1, 7) // expect: 60
}
