// Tests imports

// Global use

code:
use std._test1

fn main() {
    print _cast_i2f(12)

    {
        print _cast_f2i(true, 5)
    }
}

expect:
-- main --
OP_GET_GLOBAL index 0
OP_CONSTANT index 0, value 12
OP_NATIVE_CALL index 1
OP_PRINT

OP_GET_GLOBAL index 1
OP_TRUE
OP_CONSTANT index 1, value 5
OP_CAST_TO_FLOAT
OP_NATIVE_CALL index 2
OP_PRINT
OP_NAKED_RETURN

-- Global scope --
OP_CONSTANT index 0, value <native fn>
OP_DEFINE_GLOBAL index 0
OP_CONSTANT index 1, value <native fn>
OP_DEFINE_GLOBAL index 1

OP_CONSTANT index 2, value <fn main>
OP_DEFINE_GLOBAL index 2
OP_GET_GLOBAL index 2
OP_CALL index 0

================

// Local use

code:
fn main() {
    {
        use std._test1
        print _cast_f2i(false, 3.)
    }
    {
        var tmp = 1
        use std._test1
        print _cast_i2f(56)
    }

    // Reimport locally
    use std._test1
    {
        use std._test1
    }
}

expect:
-- main --
// First block
OP_CONSTANT index 0, value <native fn>
OP_CONSTANT index 1, value <native fn>
OP_GET_LOCAL index 2
OP_FALSE
OP_CONSTANT index 2, value 3
OP_NATIVE_CALL index 2
OP_PRINT
OP_POP
OP_POP

// Second one
OP_CONSTANT index 3, value 1
OP_CONSTANT index 4, value <native fn>
OP_CONSTANT index 5, value <native fn>
OP_GET_LOCAL index 2
OP_CONSTANT index 6, value 56
OP_NATIVE_CALL index 1
OP_PRINT
OP_POP
OP_POP
OP_POP

OP_CONSTANT index 7, value <native fn>
OP_CONSTANT index 8, value <native fn>

// Third one
OP_CONSTANT index 9, value <native fn>
OP_CONSTANT index 10, value <native fn>
OP_POP
OP_POP

OP_NAKED_RETURN

-- Global scope --
OP_CONSTANT index 0, value <fn main>
OP_DEFINE_GLOBAL index 0
OP_GET_GLOBAL index 0
OP_CALL index 0

================

// Local use multiple imports

code:
use std._test1

fn main() {
    {
        use std._test2
        print _gt_f2i(1, "empty", 3.)

        // From _test1
        print _cast_f2i(false, 3.)
    }
    {
        var tmp = 1
        use std._test1
        print _cast_i2f(56)
    }

    // Reimport locally
    use std._test2
    {
        use std._test2
        use std._test1

        // From _test1
        print _cast_i2f(56)
        // From _test2
        print _gt_i2f(24, 3.)
    }
}

expect:
-- main --
// First block
OP_CONSTANT index 0, value <native fn>
OP_CONSTANT index 1, value <native fn>
OP_GET_LOCAL index 1
OP_CONSTANT index 2, value 1
OP_CONSTANT index 3, value "empty"
OP_CONSTANT index 4, value 3
OP_NATIVE_CALL index 3
OP_PRINT

OP_GET_GLOBAL index 1
OP_FALSE
OP_CONSTANT index 5, value 3
OP_NATIVE_CALL index 2
OP_PRINT

OP_POP
OP_POP

// Second one
OP_CONSTANT index 6, value 1
OP_CONSTANT index 7, value <native fn>
OP_CONSTANT index 8, value <native fn>
OP_GET_LOCAL index 2
OP_CONSTANT index 9, value 56
OP_NATIVE_CALL index 1
OP_PRINT
OP_POP
OP_POP
OP_POP

OP_CONSTANT index 10, value <native fn>
OP_CONSTANT index 11, value <native fn>

// Third one
OP_CONSTANT index 12, value <native fn>
OP_CONSTANT index 13, value <native fn>
OP_CONSTANT index 14, value <native fn>
OP_CONSTANT index 15, value <native fn>

OP_GET_LOCAL index 5
OP_CONSTANT index 16, value 56
OP_NATIVE_CALL index 1
OP_PRINT

OP_GET_LOCAL index 4
OP_CONSTANT index 17, value 24
OP_CONSTANT index 18, value 3
OP_NATIVE_CALL index 2
OP_PRINT

OP_POP
OP_POP
OP_POP
OP_POP

OP_NAKED_RETURN

-- Global scope --
OP_CONSTANT index 0, value <native fn>
OP_DEFINE_GLOBAL index 0
OP_CONSTANT index 1, value <native fn>
OP_DEFINE_GLOBAL index 1

OP_CONSTANT index 2, value <fn main>
OP_DEFINE_GLOBAL index 2
OP_GET_GLOBAL index 2
OP_CALL index 0

================
