// Tests while statements

config:
ignore main-call

code:
var i = 0

fn main() {
    while i<4 {
        print i
        i = i + 1
    }
}

expect:
-- Function main
OP_GET_GLOBAL index 0
OP_CONSTANT index 0, value 4
OP_LESS_INT
OP_JUMP_IF_FALSE 5 -> 22
OP_POP
OP_GET_GLOBAL index 0
OP_PRINT
OP_GET_GLOBAL index 0
OP_CONSTANT index 1, value 1
OP_ADD_INT
OP_SET_GLOBAL index 0
OP_LOOP 19 -> 0
OP_POP

OP_NULL
OP_RETURN

// Global scope
OP_CONSTANT index 0, value 0
OP_DEFINE_GLOBAL index 0

================

code:
fn main() {
    var i = 0
    while i<4 {
        print i
        i = i + 1
    }
}

expect:
-- Function main
OP_CONSTANT index 0, value 0
OP_GET_LOCAL index 1
OP_CONSTANT index 1, value 4
OP_LESS_INT
OP_JUMP_IF_FALSE 7 -> 24
OP_POP
OP_GET_LOCAL index 1
OP_PRINT
OP_GET_LOCAL index 1
OP_CONSTANT index 2, value 1
OP_ADD_INT
OP_SET_LOCAL index 1
OP_LOOP 21 -> 2
OP_POP

OP_NULL
OP_RETURN

================

